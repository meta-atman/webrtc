name: Build WebRTC

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential python3

    - name: Test Remote Connection
      run: |
          WEBRTC_VERSION="${{ github.ref_name }}"
          git ls-remote https://webrtc.googlesource.com/src refs/branch-heads/$WEBRTC_VERSION

    - name: Setup Depot Tools
      run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "PATH=$PATH:$(pwd)/depot_tools" >> $GITHUB_ENV
  
    - name: Check PATH
      run: echo $PATH

    - name: Clone WebRTC source
      run: |
        WEBRTC_VERSION="${{ github.ref_name }}"
        mkdir webrtc
        cd webrtc
        fetch --nohooks webrtc
        cd src
        build/linux/sysroot_scripts/install-sysroot.py --arch=arm64
        git fetch origin refs/branch-heads/$WEBRTC_VERSION:refs/heads/branch-heads/$WEBRTC_VERSION
        git checkout branch-heads/$WEBRTC_VERSION
        git clean -df
        gclient sync -D --force --reset --with_branch_heads --no-history

    - name: Build WebRTC
      env:
        PATH: ${{ env.PATH }}
      run: |
        cd webrtc/src
        mkdir -p out/Release
        gn gen out/Release --args="
            target_os=\"linux\" 
            target_cpu=\"arm64\" 
            is_debug=false 
            rtc_include_tests=false 
            rtc_use_x11=false 
            rtc_use_h264=true 
            rtc_use_pipewire=false 
            use_rtti=true 
            use_glib=false 
            use_custom_libcxx=false 
            rtc_build_tools=false 
            rtc_build_examples=false 
            is_component_build=false 
            is_component_ffmpeg=true 
            ffmpeg_branding=\"Chrome\" 
            proprietary_codecs=true 
            clang_use_chrome_plugins=false"
        ninja -C out/Release

    - name: Organize Output
      run: |
          mkdir -p include
          rsync -amv --include=*/ --include=*.h --include=*.hpp --exclude=* webrtc/src/ include/
          mkdir -p lib
          cp webrtc/src/out/Release/obj/libwebrtc.a lib/

    - name: Create release
      run: |
        tar -czvf libwebrtc-arm64.tar.gz include lib

    - name: Upload Release to GitHub
      uses: softprops/action-gh-release@v2
      with:
        files: libwebrtc-arm64.tar.gz